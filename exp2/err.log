In file included from /usr/include/c++/13/string:49,
                 from /usr/include/c++/13/bits/locale_classes.h:40,
                 from /usr/include/c++/13/bits/ios_base.h:41,
                 from /usr/include/c++/13/ios:44,
                 from /usr/include/c++/13/ostream:40,
                 from /usr/include/c++/13/iostream:41,
                 from test.cc:1:
/usr/include/c++/13/bits/stl_function.h: In instantiation of ‘constexpr bool std::less<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = Symbol]’:
/usr/include/c++/13/bits/stl_map.h:511:32:   required from ‘std::map<_Key, _Tp, _Compare, _Alloc>::mapped_type& std::map<_Key, _Tp, _Compare, _Alloc>::operator[](const key_type&) [with _Key = Symbol; _Tp = std::set<Symbol>; _Compare = std::less<Symbol>; _Alloc = std::allocator<std::pair<const Symbol, std::set<Symbol> > >; mapped_type = std::set<Symbol>; key_type = Symbol]’
item_set_collection.h:49:47:   required from here
/usr/include/c++/13/bits/stl_function.h:408:20: error: no match for ‘operator<’ (operand types are ‘const Symbol’ and ‘const Symbol’)
  408 |       { return __x < __y; }
      |                ~~~~^~~~~
In file included from /usr/include/c++/13/string:48:
/usr/include/c++/13/bits/stl_iterator.h:455:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator<(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  455 |     operator<(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:455:5: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/stl_function.h:408:20: note:   ‘const Symbol’ is not derived from ‘const std::reverse_iterator<_Iterator>’
  408 |       { return __x < __y; }
      |                ~~~~^~~~~
/usr/include/c++/13/bits/stl_iterator.h:500:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator<(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  500 |     operator<(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:500:5: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/stl_function.h:408:20: note:   ‘const Symbol’ is not derived from ‘const std::reverse_iterator<_Iterator>’
  408 |       { return __x < __y; }
      |                ~~~~^~~~~
/usr/include/c++/13/bits/stl_iterator.h:1705:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator<(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1705 |     operator<(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:1705:5: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/stl_function.h:408:20: note:   ‘const Symbol’ is not derived from ‘const std::move_iterator<_IteratorL>’
  408 |       { return __x < __y; }
      |                ~~~~^~~~~
/usr/include/c++/13/bits/stl_iterator.h:1770:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator<(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1770 |     operator<(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:1770:5: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/stl_function.h:408:20: note:   ‘const Symbol’ is not derived from ‘const std::move_iterator<_IteratorL>’
  408 |       { return __x < __y; }
      |                ~~~~^~~~~
In file included from /usr/include/c++/13/bits/stl_algobase.h:64,
                 from /usr/include/c++/13/string:51:
/usr/include/c++/13/bits/stl_pair.h: In instantiation of ‘constexpr bool std::operator<(const pair<_T1, _T2>&, const pair<_T1, _T2>&) [with _T1 = long unsigned int; _T2 = Symbol]’:
/usr/include/c++/13/bits/stl_function.h:408:20:   required from ‘constexpr bool std::less<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = std::pair<long unsigned int, Symbol>]’
/usr/include/c++/13/bits/stl_map.h:531:32:   required from ‘std::map<_Key, _Tp, _Compare, _Alloc>::mapped_type& std::map<_Key, _Tp, _Compare, _Alloc>::operator[](key_type&&) [with _Key = std::pair<long unsigned int, Symbol>; _Tp = long unsigned int; _Compare = std::less<std::pair<long unsigned int, Symbol> >; _Alloc = std::allocator<std::pair<const std::pair<long unsigned int, Symbol>, long unsigned int> >; mapped_type = long unsigned int; key_type = std::pair<long unsigned int, Symbol>]’
item_set_collection.h:145:32:   required from here
/usr/include/c++/13/bits/stl_pair.h:837:57: error: no match for ‘operator<’ (operand types are ‘const Symbol’ and ‘const Symbol’)
  837 |              || (!(__y.first < __x.first) && __x.second < __y.second); }
      |                                              ~~~~~~~~~~~^~~~~~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:455:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator<(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  455 |     operator<(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:455:5: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/stl_pair.h:837:57: note:   ‘const Symbol’ is not derived from ‘const std::reverse_iterator<_Iterator>’
  837 |              || (!(__y.first < __x.first) && __x.second < __y.second); }
      |                                              ~~~~~~~~~~~^~~~~~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:500:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator<(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  500 |     operator<(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:500:5: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/stl_pair.h:837:57: note:   ‘const Symbol’ is not derived from ‘const std::reverse_iterator<_Iterator>’
  837 |              || (!(__y.first < __x.first) && __x.second < __y.second); }
      |                                              ~~~~~~~~~~~^~~~~~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:1705:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator<(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1705 |     operator<(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:1705:5: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/stl_pair.h:837:57: note:   ‘const Symbol’ is not derived from ‘const std::move_iterator<_IteratorL>’
  837 |              || (!(__y.first < __x.first) && __x.second < __y.second); }
      |                                              ~~~~~~~~~~~^~~~~~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:1770:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator<(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1770 |     operator<(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:1770:5: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/stl_pair.h:837:57: note:   ‘const Symbol’ is not derived from ‘const std::move_iterator<_IteratorL>’
  837 |              || (!(__y.first < __x.first) && __x.second < __y.second); }
      |                                              ~~~~~~~~~~~^~~~~~~~~~~~
/usr/include/c++/13/bits/stl_pair.h:835:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator<(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
  835 |     operator<(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/13/bits/stl_pair.h:835:5: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/stl_pair.h:837:57: note:   ‘const Symbol’ is not derived from ‘const std::pair<_T1, _T2>’
  837 |              || (!(__y.first < __x.first) && __x.second < __y.second); }
      |                                              ~~~~~~~~~~~^~~~~~~~~~~~
/usr/include/c++/13/bits/stl_function.h: In instantiation of ‘constexpr bool std::less<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = Item]’:
/usr/include/c++/13/bits/stl_tree.h:2118:35:   required from ‘std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_get_insert_unique_pos(const key_type&) [with _Key = Item; _Val = Item; _KeyOfValue = std::_Identity<Item>; _Compare = std::less<Item>; _Alloc = std::allocator<Item>; key_type = Item]’
/usr/include/c++/13/bits/stl_tree.h:2171:4:   required from ‘std::pair<std::_Rb_tree_iterator<_Val>, bool> std::_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::_M_insert_unique(_Arg&&) [with _Arg = Item; _Key = Item; _Val = Item; _KeyOfValue = std::_Identity<Item>; _Compare = std::less<Item>; _Alloc = std::allocator<Item>]’
/usr/include/c++/13/bits/stl_set.h:523:25:   required from ‘std::pair<typename std::_Rb_tree<_Key, _Key, std::_Identity<_Tp>, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Key>::other>::const_iterator, bool> std::set<_Key, _Compare, _Alloc>::insert(value_type&&) [with _Key = Item; _Compare = std::less<Item>; _Alloc = std::allocator<Item>; typename std::_Rb_tree<_Key, _Key, std::_Identity<_Tp>, _Compare, typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Key>::other>::const_iterator = std::_Rb_tree<Item, Item, std::_Identity<Item>, std::less<Item>, std::allocator<Item> >::const_iterator; typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Key>::other = std::allocator<Item>; typename __gnu_cxx::__alloc_traits<_Alloc>::rebind<_Key> = __gnu_cxx::__alloc_traits<std::allocator<Item>, Item>::rebind<Item>; typename _Alloc::value_type = Item; value_type = Item]’
item_set_collection.h:98:41:   required from here
/usr/include/c++/13/bits/stl_function.h:408:20: error: no match for ‘operator<’ (operand types are ‘const Item’ and ‘const Item’)
  408 |       { return __x < __y; }
      |                ~~~~^~~~~
/usr/include/c++/13/bits/stl_iterator.h:455:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator<(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  455 |     operator<(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:455:5: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/stl_function.h:408:20: note:   ‘const Item’ is not derived from ‘const std::reverse_iterator<_Iterator>’
  408 |       { return __x < __y; }
      |                ~~~~^~~~~
/usr/include/c++/13/bits/stl_iterator.h:500:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator<(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  500 |     operator<(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:500:5: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/stl_function.h:408:20: note:   ‘const Item’ is not derived from ‘const std::reverse_iterator<_Iterator>’
  408 |       { return __x < __y; }
      |                ~~~~^~~~~
/usr/include/c++/13/bits/stl_iterator.h:1705:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator<(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1705 |     operator<(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:1705:5: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/stl_function.h:408:20: note:   ‘const Item’ is not derived from ‘const std::move_iterator<_IteratorL>’
  408 |       { return __x < __y; }
      |                ~~~~^~~~~
/usr/include/c++/13/bits/stl_iterator.h:1770:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator<(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1770 |     operator<(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:1770:5: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/stl_function.h:408:20: note:   ‘const Item’ is not derived from ‘const std::move_iterator<_IteratorL>’
  408 |       { return __x < __y; }
      |                ~~~~^~~~~
In file included from /usr/include/c++/13/bits/stl_algobase.h:71:
/usr/include/c++/13/bits/predefined_ops.h: In instantiation of ‘bool __gnu_cxx::__ops::_Iter_equals_val<_Value>::operator()(_Iterator) [with _Iterator = __gnu_cxx::__normal_iterator<const Production*, std::vector<Production> >; _Value = const Production]’:
/usr/include/c++/13/bits/stl_algobase.h:2072:14:   required from ‘_RandomAccessIterator std::__find_if(_RandomAccessIterator, _RandomAccessIterator, _Predicate, random_access_iterator_tag) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<const Production*, vector<Production> >; _Predicate = __gnu_cxx::__ops::_Iter_equals_val<const Production>]’
/usr/include/c++/13/bits/stl_algobase.h:2117:23:   required from ‘_Iterator std::__find_if(_Iterator, _Iterator, _Predicate) [with _Iterator = __gnu_cxx::__normal_iterator<const Production*, vector<Production> >; _Predicate = __gnu_cxx::__ops::_Iter_equals_val<const Production>]’
/usr/include/c++/13/bits/stl_algo.h:3897:28:   required from ‘_IIter std::find(_IIter, _IIter, const _Tp&) [with _IIter = __gnu_cxx::__normal_iterator<const Production*, vector<Production> >; _Tp = Production]’
item_set_collection.h:165:44:   required from here
/usr/include/c++/13/bits/predefined_ops.h:270:24: error: no match for ‘operator==’ (operand types are ‘const Production’ and ‘const Production’)
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:1217:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> bool __gnu_cxx::operator==(const __normal_iterator<_IteratorL, _Container>&, const __normal_iterator<_IteratorR, _Container>&)’
 1217 |     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:1217:5: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   ‘const Production’ is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:1225:5: note: candidate: ‘template<class _Iterator, class _Container> bool __gnu_cxx::operator==(const __normal_iterator<_Iterator, _Container>&, const __normal_iterator<_Iterator, _Container>&)’
 1225 |     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:1225:5: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/predefined_ops.h:270:24: note:   ‘const Production’ is not derived from ‘const __gnu_cxx::__normal_iterator<_Iterator, _Container>’
  270 |         { return *__it == _M_value; }
      |                  ~~~~~~^~~~~~~~~~~
/usr/include/c++/13/bits/stl_algobase.h: In instantiation of ‘static bool std::__equal<_BoolType>::equal(_II1, _II1, _II2) [with _II1 = std::_Rb_tree_const_iterator<Item>; _II2 = std::_Rb_tree_const_iterator<Item>; bool _BoolType = false]’:
/usr/include/c++/13/bits/stl_algobase.h:1219:43:   required from ‘bool std::__equal_aux1(_II1, _II1, _II2) [with _II1 = _Rb_tree_const_iterator<Item>; _II2 = _Rb_tree_const_iterator<Item>]’
/usr/include/c++/13/bits/stl_algobase.h:1227:31:   required from ‘bool std::__equal_aux(_II1, _II1, _II2) [with _II1 = _Rb_tree_const_iterator<Item>; _II2 = _Rb_tree_const_iterator<Item>]’
/usr/include/c++/13/bits/stl_algobase.h:1557:30:   required from ‘bool std::equal(_II1, _II1, _II2) [with _II1 = _Rb_tree_const_iterator<Item>; _II2 = _Rb_tree_const_iterator<Item>]’
/usr/include/c++/13/bits/stl_tree.h:1608:17:   required from ‘bool std::operator==(const _Rb_tree<Item, Item, _Identity<Item>, less<Item>, allocator<Item> >&, const _Rb_tree<Item, Item, _Identity<Item>, less<Item>, allocator<Item> >&)’
/usr/include/c++/13/bits/stl_set.h:989:23:   required from ‘bool std::operator==(const set<_Key, _Compare, _Allocator>&, const set<_Key, _Compare, _Allocator>&) [with _Key = Item; _Compare = less<Item>; _Alloc = allocator<Item>]’
item_set.h:13:31:   required from here
/usr/include/c++/13/bits/stl_algobase.h:1170:29: error: no match for ‘operator==’ (operand types are ‘const Item’ and ‘const Item’)
 1170 |             if (!(*__first1 == *__first2))
      |                  ~~~~~~~~~~~^~~~~~~~~~~~~
In file included from /usr/include/c++/13/iosfwd:42,
                 from /usr/include/c++/13/ios:40:
/usr/include/c++/13/bits/postypes.h:192:5: note: candidate: ‘template<class _StateT> bool std::operator==(const fpos<_StateT>&, const fpos<_StateT>&)’
  192 |     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/13/bits/postypes.h:192:5: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/stl_algobase.h:1170:29: note:   ‘const Item’ is not derived from ‘const std::fpos<_StateT>’
 1170 |             if (!(*__first1 == *__first2))
      |                  ~~~~~~~~~~~^~~~~~~~~~~~~
In file included from /usr/include/c++/13/string:43:
/usr/include/c++/13/bits/allocator.h:237:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator==(const allocator<_CharT>&, const allocator<_T2>&)’
  237 |     operator==(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/13/bits/allocator.h:237:5: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/stl_algobase.h:1170:29: note:   ‘const Item’ is not derived from ‘const std::allocator<_CharT>’
 1170 |             if (!(*__first1 == *__first2))
      |                  ~~~~~~~~~~~^~~~~~~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:448:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator==(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  448 |     operator==(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:448:5: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/stl_algobase.h:1170:29: note:   ‘const Item’ is not derived from ‘const std::reverse_iterator<_Iterator>’
 1170 |             if (!(*__first1 == *__first2))
      |                  ~~~~~~~~~~~^~~~~~~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:493:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator==(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  493 |     operator==(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:493:5: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/stl_algobase.h:1170:29: note:   ‘const Item’ is not derived from ‘const std::reverse_iterator<_Iterator>’
 1170 |             if (!(*__first1 == *__first2))
      |                  ~~~~~~~~~~~^~~~~~~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:1678:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator==(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1678 |     operator==(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:1678:5: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/stl_algobase.h:1170:29: note:   ‘const Item’ is not derived from ‘const std::move_iterator<_IteratorL>’
 1170 |             if (!(*__first1 == *__first2))
      |                  ~~~~~~~~~~~^~~~~~~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:1748:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator==(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1748 |     operator==(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/13/bits/stl_iterator.h:1748:5: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/stl_algobase.h:1170:29: note:   ‘const Item’ is not derived from ‘const std::move_iterator<_IteratorL>’
 1170 |             if (!(*__first1 == *__first2))
      |                  ~~~~~~~~~~~^~~~~~~~~~~~~
/usr/include/c++/13/bits/stl_pair.h:812:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator==(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
  812 |     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/13/bits/stl_pair.h:812:5: note:   template argument deduction/substitution failed:
/usr/include/c++/13/bits/stl_algobase.h:1170:29: note:   ‘const Item’ is not derived from ‘const std::pair<_T1, _T2>’
 1170 |             if (!(*__first1 == *__first2))
      |                  ~~~~~~~~~~~^~~~~~~~~~~~~
